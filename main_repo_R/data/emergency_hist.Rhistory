},
y = 0.05
)$root
}
}
mat_cirtical_val_Zr <- matrix(NA, nrow = 12, ncol = 6)
for(n in 6:12) {
for(r in 1 : (min(6, n-2))) {
mat_cirtical_val_Zr[n,r] <- bisection_method(
f = function(z) {
pZr(z, b = 1, n, r, lower.tail = TRUE)
},
y = 0.05
)$root
}
}
mat_cirtical_val_Zr
plot(power_Zr,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
crit_val_Zr <- qZr(n=12,r=3, q = 0.05)
power_Zr <- sapply(seq_b, function(b) {
pZr(crit_val_Zr, b, n=12, r = 3, lower.tail = FALSE)
})
# plot two power function
plot(power_Zr,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
crit_val_Zr <- qZr(n=12,r=3, q = 0.05)
power_Zr <- sapply(seq_b, function(b) {
pZr(crit_val_Zr, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
power_Zr_wrong <- sapply(seq_b, function(b) {
1 - b*pZr(crit_val_Zr, b, n=12, r = 3, lower.tail = TRUE)
})
plot(power_Zr_wrong,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
power_Zr_wrong <- sapply(seq_b, function(b) {
b*pZr(crit_val_Zr, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
sapply(list.files(), source)
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr, b, n=12, r = 3, lower.tail = FALSE)
})
plot(power_Zr_wrong,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
crit_val_Zr_wrong <- 0.27470454
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = FALSE)
})
plot(power_Zr_wrong,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
seq_z
# replicate the wrong power of Zr estimated in the literature
seq_b
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
plot(power_Zr_wrong,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = FALSE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = TRUE)
})
set.seed(1234)
crit_val_Dr <- qDr(n = 12, r = 3, se.return = FALSE)
# get the critical values
set.seed(1234)
crit_val_Dr <- qDr(n = 12, r = 3, se.return = FALSE)
View(qDr)
source('~/Documents/MATH4P06/midterm_report_Rfiles/Functions/Function_qDr.R', echo=TRUE)
set.seed(1234)
crit_val_Dr <- qDr(n = 12, r = 3, se.return = FALSE)
seq_b <- seq(0.01, 1, 0.001)
mat_power_Dr <- matrix(NA, ncol = 2, nrow = length(seq_b))
B <- 1e3
for (i in seq_along(seq_b)) {
b <- seq_b[i]
exponential_slippage_sampler(n = 12, r = 3, b = b, B = B) %>%
apply(., 2, function(x) Dr(x, r = 3)) %>%
{
. > crit_val_Dr
} %>%
{
c(p.val = mean(.), se = sd(.))
} ->
power_Dr
mat_power_Dr[i, ] <- power_Dr
}
plot(mat_power_Dr[, 1])
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = TRUE)
})
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = FALSE)
})
plot(power_Zr_wrong,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
crit_val_Zr_wrong <- 0.27470454
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = FALSE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = FALSE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
pZr_wrong(0.5, b, n=12, r = 3, lower.tail = TRUE)
pZr_wrong(0.02, b, n=12, r = 3, lower.tail = TRUE)
pZr_wrong(0.23, b, n=12, r = 3, lower.tail = TRUE)
pZr_wrong(0.23, b, n=12, r = 3, lower.tail = FALSE)
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = FALSE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
power_Zr_wrong
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
max(seq_b)
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = FALSE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
power_Zr_wrong <- sapply(seq_b, function(b) {
1-pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr_wrong,type = "l", col = "red")
View(pZr_wrong)
pZr_wrong <- function(z, b = 1, n = 10, r = 5, lower.tail = TRUE) {
# return the P(Z_r < z | H_r) proposed in the literature
# z : the argument of cdf of Z_r, has range 0 < z <1/r
# n : total number of observation in the sample
# r : integer, number of contamination in the observation
# b : the parameter for contaminated exponential sample
#     the contamination assumed to have Exp(theta/b) disribution,
#    assuming  b <= 1
# lower.tail: logical, if it's false then return 1 - P(Z_r < z | H_r)
if (!lower.tail) {
return(1 - pZr_wrong(z, b, n, r))
}
if (z > 1 / r) {
return(1)
} else if (z < 0) {
return(0)
}
factor_1 <- b^(r+1) * gamma(r * b + n - r) / gamma(r * b + 1)
j <- 2:(n - r)
a_j <- r * b + n - r - j + 1
factor_2 <- (-1)^(n - j - r) *
(b^(-r) - (a_j * z / (1 - r * z) + b)^(-r)) / (gamma(j - 1) * gamma(n - j - r + 1) * a_j)
return(sum(factor_1 * factor_2))
}
power_Zr_wrong <- sapply(seq_b, function(b) {
pZr_wrong(crit_val_Zr_wrong, b, n=12, r = 3, lower.tail = FALSE)
})
plot(power_Zr_wrong,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
power_Zr <- sapply(seq_b, function(b) {
pZr(crit_val_Zr, b, n=12, r = 3, lower.tail = TRUE)
})
# plot two power function
plot(power_Zr,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
plot(power_Zr,type = "l", col = "red")
par(new = TRUE)
plot(mat_power_Dr[, 1])
# plot two power functions
df_power <- data.frame(power_zr = power_zr, power_dr = power_Dr, wrong_power = power_Zr_wrong,b_vals = seq_b)
# plot two power functions
df_power <- data.frame(power_zr = power_Zr, power_dr = power_Dr, wrong_power = power_Zr_wrong,b_vals = seq_b)
# plot two power functions
df_power <- data.frame(power_zr = power_Zr, power_dr = mat_power_Dr[, 1], wrong_power = power_Zr_wrong,b_vals = seq_b)
ggplot(df_power, aes(seq_b, power_dr)) +
geom_jitter()
ggplot(df_power, aes(seq_b, power_dr)) +
geom_jitter() +
geom_line(x = b_vals, y = power_zr)
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr)) +
geom_line(aes(y = power_zr))
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, alpha(0.5))) +
geom_line(aes(y = power_zr))
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, alpha("green",0.5))) +
geom_line(aes(y = power_zr))
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, alpha = 0.5)) +
geom_line(aes(y = power_zr))
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, alpha = 0.5, color = "green")) +
geom_line(aes(y = power_zr))
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, alpha = 0.5, color = "power of Zr")) +
geom_line(aes(y = power_zr, color = "power of Zr")) +
geom_line(aes(y = wrong_power, color = "wrong power estimated"))
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "power of Zr")) +
geom_line(aes(y = power_zr, color = "power of Zr")) +
geom_line(aes(y = wrong_power, color = "wrong power estimated"))
df_power <- data.frame(power_zr = power_Zr, power_dr = mat_power_Dr[, 1], wrong_power = power_Zr_wrong,b_vals = seq_b)
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "power of Dr")) +
geom_line(aes(y = power_zr, color = "power of Zr")) +
geom_line(aes(y = wrong_power, color = "wrong power estimated"))
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "power of Dr")) +
geom_line(aes(y = power_zr, color = "power of Zr")) +
geom_line(aes(y = wrong_power, color = "wrong power estimated"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
labs(fill="")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr(wrong)"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
labs(fill="")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr(wrong)"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
labs(fill="a")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr(wrong)"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_manual(name = "",values=c("red", "blue", "green"))
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr(wrong)"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr"), fill = "") +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr(wrong)"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr(wrong)"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr(wrong)"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
labs(fill = "Dose (mg)")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr(wrong)"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("")
p_zr_wrong <- sapply(seq_z, function(z) {
pZr_wrong(z = z, b = 1/2, n = 12, r = 3)
})
df_exp_samples <- data.frame(sample_zr = samples_zr, p_Zr = p_zr, seq_z = seq_z, pzr_wrong = p_zr_wrong)
#plot the cdf and edf of the sample generated
ggplot(df_exp_samples, aes(seq_z)) +
geom_smooth(aes( y = p_zr, color = "Theoretical")) +
geom_smooth(aes( y = p_zr_wrong, color = "Claimed Theoretical")) +
stat_ecdf(mapping = aes(samples_zr,color = "Empirical"), pad = FALSE) +
labs(title = "zdf of Z_r with n = 12, r = 3, b = 1/2") +
ylab("P(Z_r < z)") +
xlab("z") +
scale_color_discrete("")
ggplot(df_exp_samples, aes(seq_z)) +
geom_smooth(aes( y = p_zr, color = "Theoretical")) +
geom_smooth(aes( y = p_zr_wrong, color = "Claimed Theoretical")) +
stat_ecdf(mapping = aes(samples_zr,color = "Empirical"), pad = FALSE) +
labs(title = "zdf of Zr with n = 12, r = 3, b = 1/2") +
ylab("P(Zr < z)") +
xlab("z") +
scale_color_discrete("")
ggplot(df_power, aes(seq_b)) +
geom_jitter(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("")
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("")
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr",shape = 20)) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("")
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr"),shape = 20) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("")
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("",shape = 20)
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr"),shape = 1) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("")
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr"),shape = 1) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("") +
scale_colour_manual(guide = guide_legend(shape = c(1, NA, NA), linetype = c("blank", "solid","solid")))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr"),shape = 1) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("") +
scale_colour_manual(guide = guide_legend(override.aes = list(shape = c(1, NA, NA), linetype = c("blank", "solid","solid"))))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr"),shape = 1) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("") +
scale_linetype_manual(c("solid","blank","blank"))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("") +
scale_linetype_manual(guide_legend(override.aes = list(
linetype = c("blank", "solid","solid"),
shape = c(NA,1, 1)))))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("") +
scale_linetype_manual(guide_legend(override.aes = list(
linetype = c("blank", "solid","solid"),
shape = c(NA,1, 1))))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("") +
scale_linetype_manual(c("blank", "solid","solid"),guide_legend(override.aes = list(
shape = c(NA,1, 1))))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("",guide_legend(override.aes = list(
shape = c(NA,1, 1))))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("",guide_legend(override.aes = list(
shape = c(1,1, 1))))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("1",guide_legend(override.aes = list(
shape = c(1,1, 1))))
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_color_discrete("")
ggplot(df_power, aes(seq_b)) +
geom_point(aes(y = power_dr, color = "Dr")) +
geom_line(aes(y = power_zr, color = "Zr")) +
geom_line(aes(y = wrong_power, color = "Zr claimed"))+
labs(title = "power comparision between test with n = 12, r = 3") +
ylab("power") +
xlab("b") +
scale_linetype_manual(c("blank", "solid","solid"),guide_legend(override.aes = list(
shape = c(NA,1, 1))))
ggplot(df_exp_samples, aes(seq_z)) +
geom_smooth(aes( y = p_zr, color = "Theoretical")) +
geom_smooth(aes( y = p_zr_wrong, color = "Claimed Theoretical")) +
stat_ecdf(mapping = aes(samples_zr,color = "Empirical"), pad = FALSE) +
labs(title = "zdf of Zr with n = 12, r = 3, b = 1/2") +
ylab("P(Zr < z)") +
xlab("z") +
scale_color_discrete("")
save.image("~/Documents/MATH4P06/midterm_report_Rfiles/Functions/emergency_save.RData")
savehistory("~/Documents/MATH4P06/midterm_report_Rfiles/Functions/emergency_hist.Rhistory")
